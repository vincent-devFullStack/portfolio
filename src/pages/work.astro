---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import ContactCTA from '../components/ContactCTA.astro';
import PortfolioPreview from '../components/PortfolioPreview.astro';
import Hero from '../components/Hero.astro';
import Grid from '../components/Grid.astro';
import SEO from "../components/SEO.astro";

const canonicalUrl = "/work/";

type WorkEntry = CollectionEntry<'work'>;

const compareProjects = (a: WorkEntry, b: WorkEntry): number => {
  // 1) pinned d'abord
  if (a.data.pinned !== b.data.pinned) {
    return (b.data.pinned ? 1 : 0) - (a.data.pinned ? 1 : 0);
  }

  // 2) rank (plus petit = plus haut)
  const ar = typeof a.data.rank === 'number' ? a.data.rank : Number.POSITIVE_INFINITY;
  const br = typeof b.data.rank === 'number' ? b.data.rank : Number.POSITIVE_INFINITY;
  if (ar !== br) return ar - br;

  // 3) fallback: date la + récente d'abord
  const ad = a.data.publishDate.getTime();
  const bd = b.data.publishDate.getTime();
  return bd - ad;
};

// On trie une seule fois puis on filtre
const allProjects = (await getCollection('work')) as WorkEntry[];
allProjects.sort(compareProjects);

const mainProjects = allProjects.filter((p) => !p.data.isMini);
const miniProjects = allProjects.filter((p) => p.data.isMini);
---


<BaseLayout
  title="Mes Projets | Vincent SILVESTRI"
  description="Découvrez les projets récents de Vincent Silvestri."
>
  <SEO canonicalUrl={canonicalUrl} />
  
  <div class="stack gap-10">
    <main class="wrapper stack gap-8">
      <Hero
        title="Mes Projets"
        tagline="Découvrez mes projets récents pour mieux comprendre mon expérience et mes compétences."
        align="start"
      />
      <Grid variant="offset">
        {
          mainProjects.map((project) => (
            <li>
              <PortfolioPreview project={project} />
            </li>
          ))
        }
      </Grid>

      {miniProjects.length > 0 && (
        <section class="mini-projects stack gap-4" style="margin-top:3rem;">
          <h2>Mini-projets HTML/CSS/JS</h2>
          <p class="description mini-desc">
            Quelques exercices et expérimentations autour des fondamentaux du web. 
            Ces petits projets mettent en avant des compétences en HTML, CSS et JavaScript vanilla.
          </p>
          <Grid>
            {
              miniProjects.map((project) => (
                <li>
                  <PortfolioPreview project={project} />
                </li>
              ))
            }
          </Grid>
        </section>
      )}
    </main>
    <ContactCTA />
  </div>
</BaseLayout>
