---
import { getCollection } from 'astro:content';

// SEO import
import SEO from "../components/SEO.astro";

// Layout import ‚Äî provides basic page elements: <head>, <nav>, <footer> etc.
import BaseLayout from '../layouts/BaseLayout.astro';

// Component Imports
import CallToAction from '../components/CallToAction.astro';
import Grid from '../components/Grid.astro';
import Hero from '../components/Hero.astro';
import Icon from '../components/Icon.astro';
import Pill from '../components/Pill.astro';
import PortfolioPreview from '../components/PortfolioPreview.astro';

// Page section components
import ContactCTA from '../components/ContactCTA.astro';
import Skills from '../components/Skills.astro';

// Canonical URL
const canonicalUrl = "/";


// Content Fetching: privil√©gier les "gros" projets
const MAX_TOTAL = 6;

const all = (await getCollection('work'))
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());

const mains = all.filter(p => !p.data.isMini);
const minis = all.filter(p =>  p.data.isMini);

// On prend d'abord des gros projets‚Ä¶
let projects = mains.slice(0, 3);

// ‚Ä¶puis on compl√®te avec des mini si besoin
if (projects.length < MAX_TOTAL) {
  projects = projects.concat(minis.slice(0, MAX_TOTAL - projects.length));
}


// Full Astro Component Syntax:

---

<BaseLayout>
	<SEO canonicalUrl={canonicalUrl} />
	<div class="stack gap-20 lg:gap-48">
		<div class="wrapper stack gap-8 lg:gap-20">
			<header class="hero">
				<Hero
					title="Salut, moi c'est Vincent !"
					tagline="D√©veloppeur junior, passionn√© et d√©termin√© √† progresser."
					align="start"
				>
					<div class="roles">
						<Pill><Icon icon="code" size="1.03em" /> Developer Junior</Pill>
						<Pill><Icon icon="trophy" size="1.03em" /> Objectif Alternance</Pill>
						<Pill><Icon icon="suitcase" size="1.03em" /> Pr√™t pour un stage</Pill>
					</div>
				</Hero>

				<img
  alt="Portrait de Vincent Silvestri, D√©veloppeur Web et Mobile bas√© √† Nice"
  src="/assets/portrait-min.avif"
  fetchpriority="high"
  width="360"
  height="480"
  decoding="async"
  style="
    width: 100%;
    max-width: 360px;
    height: auto;
    mask-image: linear-gradient(to bottom, rgba(0, 0, 0, 1) 50%, rgba(0, 0, 0, 0) 100%);
    -webkit-mask-image: linear-gradient(to bottom, rgba(0, 0, 0, 1) 50%, rgba(0, 0, 0, 0) 100%);
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);"
/>



			</header>
<section class="section with-background">
  <header class="section-header stack gap-2 lg:gap-4 text-left items-start">

    <h2>En recherche d'alternance</h2>
    <p>
      Je recherche une <strong>alternance √† partir de janvier 2026</strong> pour poursuivre ma formation en d√©veloppement web & mobile √† <strong>Epitech Nice</strong>.
    </p>
    <p>
      üìç Bas√© √† Nice, ouvert au t√©l√©travail ou format hybride.
    </p>
  </header>

  <div class="cta">
  <CallToAction href="/CV-Vincent-Silvestri.pdf">
  üìÑ Voir mon CV
  <Icon icon="arrow-right" size="1.2em" />
</CallToAction>


</section>

			<Skills />
		</div>

		<main class="wrapper stack gap-20 lg:gap-48">
			<section class="section with-background with-cta">
				<header class="section-header stack gap-2 lg:gap-4">
					<h3>Travaux s√©lectionn√©s</h3>
					<p>Voici quelques-uns des projets sur lesquels j'ai travaill√© r√©cemment.</p>
				</header>

				<div class="gallery">
					<Grid variant="offset">
						{
							projects.map((project) => (
								<li>
									<a class="demo-image" href={`/work/${project.id}`}>
										<picture>
  {project.data.imgMobile && (
    <source srcset={project.data.imgMobile} media="(max-width: 768px)" />
  )}
  <img
    src={project.data.img}
    alt={project.data.img_alt || ''}
    loading="lazy"
    width="640"
    height="360"
  />
</picture>

										{project.data.title.includes('‚úÖ') && (
											<span class="badgeTermine">Termin√©</span>
										)}
									</a>
								</li>
							))
						}
					</Grid>
				</div>

				<div class="cta">
					<CallToAction href="/work">
						Voir tout
						<Icon icon="arrow-right" size="1.2em" />
					</CallToAction>
				</div>
			</section>

			<section class="section with-background bg-variant">
				<header class="section-header stack gap-2 lg:gap-4">
					<h3>Stack √† venir (Epitech pr√©-MSc)</h3>
					<p>
					Voici les technologies que je vais √©tudier √† Epitech √† partir de septembre 2025.
					</p>
				</header>

				<div class="gallery">
					<Grid variant="small">
						{
							[
              'PHP / MySQL',
              'Java / Spring Boot',
              'Vue.js / Angular',
              'Ansible / Admin Syst√®me'
            ].map((brand) => (
								<li class="mention-card future-stack">
									<p>{brand}</p>
								</li>
							))
						}
					</Grid>
				</div>
			</section>

			<section class="section with-background bg-variant">
				<header class="section-header stack gap-2 lg:gap-4">
					<h3>Stack actuelle</h3>
					<p>
						Voici les technologies que j‚Äôutilise au quotidien, ou que j‚Äôai eu l‚Äôoccasion d‚Äôexplorer.
					</p>
				</header>

				<div class="gallery">
					<Grid variant="small">
						{
							['React/React Native', 'Node.js', 'MongoDB', 'Astro', 'TailwindCSS', 'GitHub', 'Vercel', 'Figma'].map((brand) => (
								<li class="mention-card">
									<p>{brand}</p>
								</li>
							))
						}
					</Grid>
				</div>
			</section>
		</main>

		<ContactCTA />
	</div>
</BaseLayout>

<style>
	.hero {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 2rem;
	}

	.roles {
		display: none;
	}

	.hero img {
		aspect-ratio: 5 / 4;
		object-fit: cover;
		object-position: top;
		border-radius: 1.5rem;
		box-shadow: var(--shadow-md);
		width: 360px;
max-width: 100%;
height: auto;

	}

	@media (min-width: 50em) {
		.hero {
			display: grid;
			grid-template-columns: 6fr 4fr;
			padding-inline: 2.5rem;
			gap: 3.75rem;
		}

		.roles {
			margin-top: 0.5rem;
			display: flex;
			gap: 0.5rem;
		}

		.hero img {
			aspect-ratio: 3 / 4;
			border-radius: 4.5rem;
			object-fit: cover;
		}
	}

	/* ====================================================== */

	.section {
		display: grid;
		gap: 2rem;
	}

	.with-background {
		position: relative;
	}

	.with-background::before {
		--hero-bg: var(--bg-image-subtle-2);

		content: '';
		position: absolute;
		pointer-events: none;
		left: 50%;
		width: 100vw;
		aspect-ratio: calc(2.25 / var(--bg-scale));
		top: 0;
		transform: translateY(-75%) translateX(-50%);
		background:
			url('/assets/backgrounds/noise.avif') top center/220px repeat,
			var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
			var(--gray-999);
		background-blend-mode: overlay, normal, normal, normal;
		mix-blend-mode: var(--bg-blend-mode);
		z-index: -1;
	}

	.with-background.bg-variant::before {
		--hero-bg: var(--bg-image-subtle-1);
	}

	.section-header h3 {
		font-size: var(--text-2xl);
	}

	@media (min-width: 50em) {
		.section {
			grid-template-columns: repeat(4, 1fr);
			grid-template-areas: 'header header header header' 'gallery gallery gallery gallery';
			gap: 5rem;
		}

		.section.with-cta {
			grid-template-areas: 'header header header cta' 'gallery gallery gallery gallery';
		}

		.section-header {
			grid-area: header;
			font-size: var(--text-lg);
		}

		.section-header {
		align-items: flex-start;
  		text-align: left;
		margin-left: 40px;
		max-width: 250ch;
		font-size: var(--text-md);
		color: var(--gray-300);
		
	}

		.section-header h3 {
			font-size: var(--text-4xl);
		}

		.with-cta .section-header {
			justify-self: flex-start;
			text-align: left;
		}

		.gallery {
			grid-area: gallery;
		}

		.cta {
			grid-area: cta;
		}
		.mention-card {
			border-radius: 1.5rem;
			height: 9.5rem;
		}
	}

	/* ====================================================== */

	.mention-card {
		display: flex;
		height: 7rem;
		justify-content: center;
		align-items: center;
		text-align: center;
		border: 1px solid var(--gray-800);
		border-radius: 1.5rem;
		color: var(--gray-300);
		background: var(--gradient-subtle);
		box-shadow: var(--shadow-sm);
	}

	.mention-card:hover {
		background: var(--gradient-subtle-hover);
		color: var(--gray-0);
	}

	.future-stack {
  opacity: 0.4;
  font-style: italic;
  transition: all 0.3s ease;
}

.future-stack:hover {
  opacity: 1;
  font-style: normal;
}


	@media (max-width: 480px) {
	
		.mention-card {
			display: flex;
			height: 7rem;
			justify-content: center;
			align-items: center;
			text-align: center;
			font-size: 3rem;
			border: 1px solid var(--gray-800);
			border-radius: 1.5rem;
			color: var(--gray-300);
			background: var(--gradient-subtle);
			box-shadow: var(--shadow-sm);
		} 
		.section-header {
		justify-self: center;
		text-align: center;
		max-width: 50ch;
		font-size: var(--text-md);
		color: var(--gray-300);
	}
	}
</style>
