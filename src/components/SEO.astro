---
interface Props {
  title?: string;
  description?: string;
  canonicalUrl?: string;
  image?: string;
  imageAlt?: string;
  type?: 'website' | 'article';
  noindex?: boolean;
  publishedTime?: string;
  tags?: string[];
}

const {
  title = "Portfolio de Vincent Silvestri",
  description = "Développeur web & mobile à Nice. Découvrez mes projets, compétences et parcours.",
  canonicalUrl,
  image,
  imageAlt = title,
  type = 'website',
  noindex = false,
  publishedTime,
  tags = [],
} = Astro.props as Props;

const site = Astro.site?.toString() ?? "https://www.vince-dev.fr";
const pathname = Astro.url.pathname;
const fullCanonical = canonicalUrl
  ? new URL(canonicalUrl, site).toString()
  : new URL(pathname, site).toString();

const defaultImage = "/assets/portrait-min.webp";
const imagePath = image ?? defaultImage;
const ogImage = new URL(imagePath, site).toString();

const is404 = pathname === "/404";

// JSON-LD de base
const websiteLd = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  url: site,
  name: "Vincent Silvestri – Développeur Web & Mobile",
  inLanguage: "fr-FR",
};

// JSON-LD Article/CreativeWork si page projet
const isArticle = type === "article";
const articleLd = isArticle
  ? {
      "@context": "https://schema.org",
      "@type": "Article",
      headline: title,
      description,
      image: ogImage,
      url: fullCanonical,
      author: { "@type": "Person", name: "Vincent Silvestri" },
      ...(publishedTime ? { datePublished: publishedTime } : {}),
      ...(tags.length ? { keywords: tags.join(", ") } : {}),
      mainEntityOfPage: fullCanonical,
    }
  : null;
---

{!is404 && <link rel="canonical" href={fullCanonical} />}

{title && <title>{title}</title>}
{description && <meta name="description" content={description} />}

{noindex && <meta name="robots" content="noindex, nofollow" />}

<meta property="og:type" content={type} />
<meta property="og:url" content={fullCanonical} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={ogImage} />
<meta property="og:image:alt" content={imageAlt} />

<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={ogImage} />

<!-- JSON-LD -->
<script type="application/ld+json" set:html={JSON.stringify(websiteLd)} />
{isArticle && (
  <script type="application/ld+json" set:html={JSON.stringify(articleLd)} />
)}
